<?php

namespace Proxies\__CG__\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ConsoleServer extends \Entities\ConsoleServer implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'name', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'hostname', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'model', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'serial_number', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'active', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'notes', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'id', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'consoleServerConnections', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'vendor', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'cabinet'];
        }

        return ['__isInitialized__', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'name', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'hostname', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'model', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'serial_number', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'active', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'notes', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'id', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'consoleServerConnections', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'vendor', '' . "\0" . 'Entities\\ConsoleServer' . "\0" . 'cabinet'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ConsoleServer $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function addConsoleServerConnection(\Entities\ConsoleServerConnection $consoleServerConnection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addConsoleServerConnection', [$consoleServerConnection]);

        return parent::addConsoleServerConnection($consoleServerConnection);
    }

    /**
     * {@inheritDoc}
     */
    public function removeConsoleServerConnection(\Entities\ConsoleServerConnection $consoleServerConnection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeConsoleServerConnection', [$consoleServerConnection]);

        return parent::removeConsoleServerConnection($consoleServerConnection);
    }

    /**
     * {@inheritDoc}
     */
    public function getConsoleServerConnections()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConsoleServerConnections', []);

        return parent::getConsoleServerConnections();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setHostname($hostname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHostname', [$hostname]);

        return parent::setHostname($hostname);
    }

    /**
     * {@inheritDoc}
     */
    public function getHostname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHostname', []);

        return parent::getHostname();
    }

    /**
     * {@inheritDoc}
     */
    public function setModel($model)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModel', [$model]);

        return parent::setModel($model);
    }

    /**
     * {@inheritDoc}
     */
    public function getModel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModel', []);

        return parent::getModel();
    }

    /**
     * {@inheritDoc}
     */
    public function setSerialNumber($serial_number)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSerialNumber', [$serial_number]);

        return parent::setSerialNumber($serial_number);
    }

    /**
     * {@inheritDoc}
     */
    public function getSerialNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSerialNumber', []);

        return parent::getSerialNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setNote($notes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNote', [$notes]);

        return parent::setNote($notes);
    }

    /**
     * {@inheritDoc}
     */
    public function getNote()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNote', []);

        return parent::getNote();
    }

    /**
     * {@inheritDoc}
     */
    public function setVendor(\Entities\Vendor $vendor = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVendor', [$vendor]);

        return parent::setVendor($vendor);
    }

    /**
     * {@inheritDoc}
     */
    public function getVendor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVendor', []);

        return parent::getVendor();
    }

    /**
     * {@inheritDoc}
     */
    public function setCabinet(\Entities\Cabinet $cabinet = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCabinet', [$cabinet]);

        return parent::setCabinet($cabinet);
    }

    /**
     * {@inheritDoc}
     */
    public function getCabinet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCabinet', []);

        return parent::getCabinet();
    }

}
